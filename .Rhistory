print(res)
## Test your code with addresses in different states, see if it works
## Note that if you change the address, your code must re-load the data and re-do the tables and figures.
## insert your address here.  It does not to have quite complete.
base <- "https://www.googleapis.com/civicinfo/v2"
org <- "representatives"
params <- list(address = address, key = google.key)
uri <- paste(base, org, sep = "/")
res <- GET(uri, query = params)
print(res)
## Test your code with addresses in different states, see if it works
## Note that if you change the address, your code must re-load the data and re-do the tables and figures.
## insert your address here.  It does not to have quite complete.
base <- "https://www.googleapis.com/civicinfo/v2"
org <- "representatives"
params <- list(address = address, key = google.key)
uri <- paste(base, org, sep = "/")
res <- GET(uri, query = params)
print(res)
address <- "Seattle, WA"
## Test your code with addresses in different states, see if it works
## Note that if you change the address, your code must re-load the data and re-do the tables and figures.
## insert your address here.  It does not to have quite complete.
base <- "https://www.googleapis.com/civicinfo/v2"
org <- "representatives"
params <- list(address = address, key = google.key)
uri <- paste(base, org, sep = "/")
res <- GET(uri, query = params)
print(res)
address <- "Seattle, WA"
## Test your code with addresses in different states, see if it works
## Note that if you change the address, your code must re-load the data and re-do the tables and figures.
## insert your address here.  It does not to have quite complete.
base <- "https://www.googleapis.com/civicinfo/v2"
org <- "representatives"
params <- list(address = address, key = google.key)
uri <- paste(base, org, sep = "/")
res <- GET(uri, query = params)
print(res)
address <- "Washington, DC"
## Test your code with addresses in different states, see if it works
## Note that if you change the address, your code must re-load the data and re-do the tables and figures.
## insert your address here.  It does not to have quite complete.
base <- "https://www.googleapis.com/civicinfo/v2"
org <- "representatives"
params <- list(address = address, key = google.key)
uri <- paste(base, org, sep = "/")
res <- GET(uri, query = params)
print(res)
address <- "Washington, DC"
## Test your code with addresses in different states, see if it works
## Note that if you change the address, your code must re-load the data and re-do the tables and figures.
Sys.info()
library(dplyr)
library(microbenchmark)
data <- as.data.frame(Titanic, stringAsFactors = FALSE)
##This function will return the filename of each user's test result.
get_file_name <- function() {
if(Sys.info()["user"] == "april") {
PROJECTDIR <- file.path("Desktop", "git_practice", "a7-collaboration-maple_pie")
fileName <- "april_results.Rdat"
} else {
PROJECTDIR <- file.path("c", "Documents", "xian", "problem 7")
fileName <- "xians_results.Rdat"
}
}
timing <- function(data){
result_table <- microbenchmark(no_dplyr_method(data), dplyr_method(data))
get_file_name()
write.table(result_table, paste0(PROJECTDIR, fileName, sep = "/"))
load(paste0(PROJECTDIR, fileName, sep = "/"))
}
timing(data)
no_dplyr_method <- function(data){
women_sub <- subset(data, data$Sex == "Female")
women_lived_sub <- subset(women_sub, women_sub$Survived == "Yes")
#women_lived_total <- sum(women_lived_sub$Freq)
#print(women_lived_total)
}
dplyr_method <- function(data){
p <- data %>%
filter(Survived == "Yes") %>%
filter(Sex == "Female")
#sum(p$Freq)
}
library(dplyr)
library(microbenchmark)
data <- as.data.frame(Titanic, stringAsFactors = FALSE)
##This function will return the filename of each user's test result.
get_file_name <- function() {
if(Sys.info()["user"] == "april") {
PROJECTDIR <- file.path("Desktop", "git_practice", "a7-collaboration-maple_pie")
fileName <- "april_results.Rdat"
} else {
PROJECTDIR <- file.path("c", "Documents", "xian", "problem 7")
fileName <- "xians_results.Rdat"
}
}
timing <- function(data){
result_table <- microbenchmark(no_dplyr_method(data), dplyr_method(data))
get_file_name()
write.table(result_table, paste0(PROJECTDIR, fileName, sep = "/"))
load(paste0(PROJECTDIR, fileName, sep = "/"))
}
timing(data)
no_dplyr_method <- function(data){
women_sub <- subset(data, data$Sex == "Female")
women_lived_sub <- subset(women_sub, women_sub$Survived == "Yes")
#women_lived_total <- sum(women_lived_sub$Freq)
#print(women_lived_total)
}
dplyr_method <- function(data){
p <- data %>%
filter(Survived == "Yes") %>%
filter(Sex == "Female")
#sum(p$Freq)
}
library(dplyr)
library(microbenchmark)
data <- as.data.frame(Titanic, stringAsFactors = FALSE)
##This function will return the filename of each user's test result.
get_file_name <- function() {
if(Sys.info()["user"] == "april") {
PROJECTDIR <- file.path("~/Desktop", "git_practice", "a7-collaboration-maple_pie")
fileName <- "april_results.Rdat"
} else {
PROJECTDIR <- file.path("c", "Documents", "xian", "problem 7")
fileName <- "xians_results.Rdat"
}
}
timing <- function(data){
result_table <- microbenchmark(no_dplyr_method(data), dplyr_method(data))
get_file_name()
write.table(result_table, paste0(PROJECTDIR, fileName, sep = "/"))
load(paste0(PROJECTDIR, fileName, sep = "/"))
}
timing(data)
no_dplyr_method <- function(data){
women_sub <- subset(data, data$Sex == "Female")
women_lived_sub <- subset(women_sub, women_sub$Survived == "Yes")
#women_lived_total <- sum(women_lived_sub$Freq)
#print(women_lived_total)
}
dplyr_method <- function(data){
p <- data %>%
filter(Survived == "Yes") %>%
filter(Sex == "Female")
#sum(p$Freq)
}
library(dplyr)
library(microbenchmark)
data <- as.data.frame(Titanic, stringAsFactors = FALSE)
##This function will return the filename of each user's test result.
get_file_name <- function() {
if(Sys.info()["user"] == "april") {
PROJECTDIR <- file.path("~/Desktop", "git_practice", "a7-collaboration-maple_pie")
fileName <- "april_results.Rdat"
} else {
PROJECTDIR <- file.path("c", "Documents", "xian", "problem 7")
fileName <- "xians_results.Rdat"
}
}
timing <- function(data){
result_table <- microbenchmark(no_dplyr_method(data), dplyr_method(data))
get_file_name()
write.table(result_table, paste0(PROJECTDIR, fileName, sep = "/"))
load(paste0(PROJECTDIR, fileName, sep = "/"))
}
timing(data)
no_dplyr_method <- function(data){
women_sub <- subset(data, data$Sex == "Female")
women_lived_sub <- subset(women_sub, women_sub$Survived == "Yes")
#women_lived_total <- sum(women_lived_sub$Freq)
#print(women_lived_total)
}
dplyr_method <- function(data){
p <- data %>%
filter(Survived == "Yes") %>%
filter(Sex == "Female")
#sum(p$Freq)
}
library(dplyr)
library(microbenchmark)
data <- as.data.frame(Titanic, stringAsFactors = FALSE)
##This function will return the filename of each user's test result.
get_file_name <- function() {
if(Sys.info()["user"] == "april") {
PROJECTDIR <- file.path("/Users/april/Desktop/git_pratice/a7-collaboration-maple_pie")
fileName <- "april_results.Rdat"
} else {
PROJECTDIR <- file.path("c", "Documents", "xian", "problem 7")
fileName <- "xians_results.Rdat"
}
}
timing <- function(data){
result_table <- microbenchmark(no_dplyr_method(data), dplyr_method(data))
get_file_name()
write.table(result_table, paste0(PROJECTDIR, fileName, sep = "/"))
load(paste0(PROJECTDIR, fileName, sep = "/"))
}
timing(data)
no_dplyr_method <- function(data){
women_sub <- subset(data, data$Sex == "Female")
women_lived_sub <- subset(women_sub, women_sub$Survived == "Yes")
#women_lived_total <- sum(women_lived_sub$Freq)
#print(women_lived_total)
}
dplyr_method <- function(data){
p <- data %>%
filter(Survived == "Yes") %>%
filter(Sex == "Female")
#sum(p$Freq)
}
install.packages("_nycflights13_")
install.packages("_nycflights13_")
install.packages("_ nycflights13 _")
install.packages("https://cran.r-project.org/src/contrib/nycflights13_1.0.0.tar.gz", repos=NULL, method="libcurl")
View(install.packages("https://cran.r-project.org/src/contrib/nycflights13_1.0.0.tar.gz", repos=NULL, method="libcurl"))
View(nycflights13)
View("nycflights13")
library("nycflights13", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
View("nycflights13")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
View(airports)
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
setwd()
wd
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
install.packages('data.table')
install.packages("data.table")
install.packages('data.table')
shiny::runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
install.packages("readr")
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
shiny::runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
View(ufo)
View('ufo')
library(shiny)
library(data.table)
library(readr)
ufo <- read.csv('a8-app-ablepie/data/UFOCoords.csv.bz2')
ufo <- read.csv('git_pratice/a8-app-ablepie/data/UFOCoords.csv.bz2')
ufo <- read.csv('Desktop/git_pratice/a8-app-ablepie/data/UFOCoords.csv.bz2')
View(ufo)
library("nycflights13", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(nycflights13)
flight <- nycflights13::weather
View(flight)
flight <- nycflights13::flights
flight <- nycflights13::flights
flight <- nycflights13::weather
View(flight)
flights <- nycflights13::flights
View(flights)
flights <- nycflights13::airports
View(flights)
airports <- nycflights13::airports
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
ufo <- read.csv('Desktop/git_pratice/a8-app-ablepie/data/UFOCoords.csv.bz2')
shinyUI(fluidPage(
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
))
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
ufo <- read.delim('a8-app-ablepie/data/UFOCoords.csv.bz2')
ufo <- read.delim('Desktop/git_pratice/a8-app-ablepie/data/UFOCoords.csv.bz2')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
data <- read.delim('Desktop/git_pratice/a8-app-ablepie/data/UFOCoords.csv.bz2')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
install.packages("maps")
install.packages("mapproj")
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
View(data)
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
View(data)
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
View(data)
data <- read.table('data/UFOCoords.csv.bz2', stringsAsFactors = FALSE)
data <- read.table('data/UFOCoords.csv.bz2', stringsAsFactors = FALSE)
airports <- nycflights13::airports
shinyUI(fluidPage(
titlePanel("a8"),
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
))
data <- read.table('data/UFOCoords.csv.bz2', stringsAsFactors = FALSE)
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
data <- read.csv('data/UFOCoords.csv.bz2')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
View(data)
data <- read.delim('data/UFOCoords.csv.bz2')
data <- read.delim('data/UFOCoords.csv.bz2')
airports <- nycflights13::airports
data <- read.delim('data/UFOCoords.csv.bz2')
data <- read.delim('data/UFOCoords.csv.bz2')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
data
View(data)
data <- read.csv::fread('data/UFOCoords.csv.bz2')
data <- read.csv::fread('data/UFOCoords.csv.bz2')
data <- read.csv::fread('data/UFOCoords.csv.bz2')
airports <- nycflights13::airports
data <- read.csv::fread('/data/UFOCoords.csv.bz2')
data <- read.csv::fread('/data/UFOCoords.csv.bz2')
data <- read.csv::fread('UFOCoords.csv.bz2')
data <- read.csv('UFOCoords.csv.bz2')
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
data <- read.csv('UFOCoords.csv.bz2')
data <- read.csv('data/UFOCoords.csv.bz2')
shiny::runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
View(us_airport)
us_airport <- airports %>%
filter(lon > 60 && lon < 130) %>%
filter(lat > 25)
View(us_airport)
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
us_airport <- airports %>%
filter(lon > -130 && lon < -60) %>%
filter(lat > 25)
View(us_airport)
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
View(data)
data <- read.csv('data/UFOCoords.csv.bz2')
data <- read.csv('data/UFOCoords.csv.bz2')
data <- read.csv('a8ufo/data/UFOCoords.csv.bz2')
data <- read.csv('a8ufo/data/UFOCoords.csv.bz2')
data <- read.csv('./data/UFOCoords.csv.bz2')
library(readr)
library(shiny)
library(nycflights13)
library(ggplot2)
library(maps)
library(mapproj)
library(readr)
data <- read.csv('/data/UFOCoords.csv.bz2')
airports <- nycflights13::airports
data <- read.csv('data/UFOCoords.csv.bz2')
shiny::runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
runApp('Desktop/git_pratice/a8-app-ablepie/a8ufo')
View(data)
data <- read.csv('data/UFOCoords.csv.bz2')
library(data.table)
library(dplyr)
library(tidyverse)
setwd("/Users/april/Desktop/git_pratice/info201au-final-project")
data <- data.table::fread("data/survey_2016.csv")
data_test <- read.csv("data/survey_2016.csv", stringsAsFactors = FALSE)
temp_1 <- data$`If yes, what condition(s) have you been diagnosed with?`
temp_diagnose <- data[, 49]
temp_diagnose %>% filter(grep())
temp_diagnose %>% filter(grep())
temp_diagnose <- data[, 49]
View(temp_diagnose)
View(data_test)
View(data)
View(temp_1)
View(temp_1)
View(temp_diagnose)
temp_history <- data[, 49, 52]
temp_current <- data[, 49]
temp_history <- data[, 52]
View(temp_history)
unique(temp_history)
install.packages("rvest")
install.packages("rvest")
help(sunbrustR)
help(sunburstR)
library(sunburstR)
library(sunburstR)
help(sunburstR)
temp_current %>% filter(str_detect("disorder"))
library(dplyr)
temp_current %>% filter(str_detect("disorder"))
library(stringr)
temp_current %>% filter(str_detect("disorder"))
count <- data %>%
filter(str_detect(`If yes, what condition(s) have you been diagnosed with?`, "disorder"))
count <- data %>%
filter(str_detect( data[, 49], "disorder"))
count <- data %>%
filter(str_detect( data[, 49], "disorder"))
count <- data %>%
filter(str_detect( data[, 49], "disorder"))
grep("disorder", temp_current, value = TRUE)
a <- grep("disorder", temp_current, value = TRUE)
Viewa()
View(a)
unique(temp_current)
line <- `If yes, what condition(s) have you been diagnosed with?`
line <- `If yes, what condition(s) have you been diagnosed with?`
line <- "`If yes, what condition(s) have you been diagnosed with?`"
temp_current <- data[, 49]
filter(str_detect(data[,49]),"anxiety")
filter(str_detect(data[,49],"anxiety"))
a <- filter(str_detect(data[,49],"anxiety"))
str_detect(data[,49],"anxiety")
summarize(str_detect(data[,49],"Anxiety"))
summarise(str_detect(data[,49],"Anxiety"))
(str_detect(data[,49],"Anxiety"))
sum(str_detect(data[,49],"Anxiety"))
result <- data.frame(current, current_count)
sum(str_detect(data[,49],"Anxiety"))
View(temp_current)
sum(str_detect(data[,49],"Mood Disorder"))
sum(str_detect(data[,49],"Stress Response Syndromes"))
sum(str_detect(data[,49],"Substance Use Disorder"))
sum(str_detect(data[,49],"Attention Deficit Hyperactivity Disorder"))
sum(str_detect(data[,49],"Pervasive Developmenta"))
current <- c(sum(str_detect(data[,49],"Anxiety Disorder")), sum(str_detect(data[,49],"Mood Disorder")),
sum(str_detect(data[,49],"Stress Response Syndromes")), sum(str_detect(data[,49],"Substance Use Disorder")),
sum(str_detect(data[,49],"Attention Deficit Hyperactivity Disorder")), sum(str_detect(data[,49],"Pervasive Developmenta")))
current
current_disorder <- c("Anxiety Disorder", "Mood Disorder", "Stress Response Syndromes", "Substance Use Disorder",
"Attention Deficit Hyperactivity Disorder", "Pervasive Developmenta")
current_num <- c(sum(str_detect(data[,49],"Anxiety Disorder")), sum(str_detect(data[,49],"Mood Disorder")),
sum(str_detect(data[,49],"Stress Response Syndromes")), sum(str_detect(data[,49],"Substance Use Disorder")),
sum(str_detect(data[,49],"Attention Deficit Hyperactivity Disorder")), sum(str_detect(data[,49],"Pervasive Developmenta")),
sum(str_detect(data[,49],"Personality Disorder")), sum(str_detect(data[,49],"Seasonal Affective Disorder")),
sum(str_detect(data[,49],"Post-traumatic Stress Disorder")), sum(str_detect(data[,49],"Autism")),
sum(str_detect(data[,49],"Traumatic Brain Injury")), sum(str_detect(data[,49],"Psychotic Disorder")),
sum(str_detect(data[,49],"Eating Disorder")))
current_num
past_num <- c(sum(str_detect(data[,52],"Anxiety Disorder")), sum(str_detect(data[,52],"Mood Disorder")),
sum(str_detect(data[,52],"Stress Response Syndromes")), sum(str_detect(data[,52],"Substance Use Disorder")),
sum(str_detect(data[,52],"Attention Deficit Hyperactivity Disorder")), sum(str_detect(data[,52],"Pervasive Developmenta")),
sum(str_detect(data[,52],"Personality Disorder")), sum(str_detect(data[,52],"Seasonal Affective Disorder")),
sum(str_detect(data[,52],"Post-traumatic Stress Disorder")), sum(str_detect(data[,52],"Autism")),
sum(str_detect(data[,52],"Traumatic Brain Injury")), sum(str_detect(data[,52],"Psychotic Disorder")),
sum(str_detect(data[,52],"Eating Disorder")))
past_num
result <- data.frame(disorder, current_num, past_num)
result <- data.frame(disorder, current_num, past_num)
disorder <- c("Anxiety Disorder", "Mood Disorder", "Stress Response Syndromes", "Substance Use Disorder",
"Attention Deficit Hyperactivity Disorder", "Pervasive Developmenta", "Personality Disorder",
"Seasonal Affective Disorder", "Post-traumatic Stress Disorder", "Autism",
"Traumatic Brain Injury", "Psychotic Disorder", "Eating Disorder")
result <- data.frame(disorder, current_num, past_num)
View(result)
devtools::install_github("rstudio/r2d3")
install.packages(r2d3)
devtools::install_github("rstudio/r2d3")
install.packages("r2d3")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("r2d3", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
